/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RangesRouteImport } from './routes/ranges'
import { Route as GqlSandboxRouteImport } from './routes/gql-sandbox'
import { Route as DebugRouteImport } from './routes/debug'
import { Route as IndexRouteImport } from './routes/index'

const RangesRoute = RangesRouteImport.update({
  id: '/ranges',
  path: '/ranges',
  getParentRoute: () => rootRouteImport,
} as any)
const GqlSandboxRoute = GqlSandboxRouteImport.update({
  id: '/gql-sandbox',
  path: '/gql-sandbox',
  getParentRoute: () => rootRouteImport,
} as any)
const DebugRoute = DebugRouteImport.update({
  id: '/debug',
  path: '/debug',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/debug': typeof DebugRoute
  '/gql-sandbox': typeof GqlSandboxRoute
  '/ranges': typeof RangesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/debug': typeof DebugRoute
  '/gql-sandbox': typeof GqlSandboxRoute
  '/ranges': typeof RangesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/debug': typeof DebugRoute
  '/gql-sandbox': typeof GqlSandboxRoute
  '/ranges': typeof RangesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/debug' | '/gql-sandbox' | '/ranges'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/debug' | '/gql-sandbox' | '/ranges'
  id: '__root__' | '/' | '/debug' | '/gql-sandbox' | '/ranges'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DebugRoute: typeof DebugRoute
  GqlSandboxRoute: typeof GqlSandboxRoute
  RangesRoute: typeof RangesRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/ranges': {
      id: '/ranges'
      path: '/ranges'
      fullPath: '/ranges'
      preLoaderRoute: typeof RangesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gql-sandbox': {
      id: '/gql-sandbox'
      path: '/gql-sandbox'
      fullPath: '/gql-sandbox'
      preLoaderRoute: typeof GqlSandboxRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/debug': {
      id: '/debug'
      path: '/debug'
      fullPath: '/debug'
      preLoaderRoute: typeof DebugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DebugRoute: DebugRoute,
  GqlSandboxRoute: GqlSandboxRoute,
  RangesRoute: RangesRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
